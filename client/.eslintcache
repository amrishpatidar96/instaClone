[{"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\index.js":"1","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\reportWebVitals.js":"2","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\App.js":"3","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Profile\\Profile.js":"4","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Signup\\Signup.js":"5","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Home\\Home.js":"6","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Signin\\Signin.js":"7","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\Navbar\\Navbar.js":"8","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\CreatePost\\CreatePost.js":"9","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\Toast\\Toast.js":"10","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\reducers\\userReducer.js":"11","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\UserProfile\\UserProfile.js":"12","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\FollowingPosts\\FollowingPosts.js":"13","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\ResetPassword\\ResetPassword.js":"14","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\NewPassword\\NewPassword.js":"15"},{"size":697,"mtime":1610834091692,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":2378,"mtime":1612641936541,"results":"19","hashOfConfig":"17"},{"size":5706,"mtime":1612645331254,"results":"20","hashOfConfig":"17"},{"size":5413,"mtime":1612214380448,"results":"21","hashOfConfig":"17"},{"size":7911,"mtime":1612526764953,"results":"22","hashOfConfig":"17"},{"size":3356,"mtime":1612567614334,"results":"23","hashOfConfig":"17"},{"size":1927,"mtime":1612646632296,"results":"24","hashOfConfig":"17"},{"size":3098,"mtime":1611693053238,"results":"25","hashOfConfig":"17"},{"size":790,"mtime":1612632705069,"results":"26","hashOfConfig":"17"},{"size":479,"mtime":1612517975752,"results":"27","hashOfConfig":"17"},{"size":4997,"mtime":1612647043049,"results":"28","hashOfConfig":"17"},{"size":7913,"mtime":1612102945277,"results":"29","hashOfConfig":"17"},{"size":2394,"mtime":1612567614312,"results":"30","hashOfConfig":"17"},{"size":1892,"mtime":1612642470810,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1mi2xno",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\index.js",[],["72","73"],"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\reportWebVitals.js",[],"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\App.js",["74","75","76"],"import React,{useEffect,createContext,useReducer, useContext} from \"react\";\nimport NavBar from \"./components/Navbar/Navbar\";\nimport { Route, Switch,useHistory,useRouteMatch} from \"react-router-dom\";\nimport Home from \"./components/screens/Home/Home\";\nimport Signin from \"./components/screens/Signin/Signin\";\nimport Signup from \"./components/screens/Signup/Signup\";\nimport Profile from \"./components/screens/Profile/Profile\";\nimport CreatePost from \"./components/screens/CreatePost/CreatePost\";\nimport UserProfile from \"./components/screens/UserProfile/UserProfile\";\nimport {reducer,initialState} from './reducers/userReducer';\nimport FollowingPosts from './components/screens/FollowingPosts/FollowingPosts';\nimport ResetPassword from \"./components/screens/ResetPassword/ResetPassword\";\nimport NewPassword from \"./components/screens/NewPassword/NewPassword\";\n\nexport const UserContext = createContext();\n\nconst Routing = (props)=>{\n    console.log(\"rendering\");\n    const history = useHistory();\n    const {state,dispatch} = useContext(UserContext);\n\n\n    useEffect(()=>{\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      console.log(\"refresh\");\n      console.log(user);\n      if(user){\n        dispatch({type:\"USER\",payload:user})\n        history.push(\"/\");\n      }\n      else{\n        if(!history.location.pathname.startsWith('/reset-password') )\n            history.push('/signin') ;\n      }\n    \n    \n    },[])\n\n    return(\n      <Switch>\n          <Route exact path=\"/reset-password/:token\" component={NewPassword}/>\n          <Route exact path=\"/reset-password\" component={ResetPassword}/>\n          <Route exact path=\"/followingposts\" component={FollowingPosts}/>\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/createpost\" component={CreatePost} />\n          <Route exact path=\"/profile/:userId\" component={UserProfile} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/\" component={Home} />\n      </Switch>\n    );\n}\n\nfunction App() {\n\n  const [state,dispatch] = useReducer(reducer,initialState);\n  console.log(\"rendering\");\n  return (\n    <div>\n      <UserContext.Provider value={{state,dispatch}} >\n        <NavBar />\n        <Routing/>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Profile\\Profile.js",["77","78","79","80","81"],"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Signup\\Signup.js",["82","83","84"],"import React,{useState,useEffect} from 'react';\r\nimport classes from './Signin.module.css';\r\nimport {Link,useHistory} from 'react-router-dom';\r\n\r\n\r\nconst Signup = ()=>{\r\n\r\n  const [name,setName] = useState(\"\");\r\n  const [password,setPassword] = useState(\"\");\r\n  const [email,setEmail] = useState(\"\");\r\n  const [error,setError] = useState(\"\");\r\n  const [errStyle,setErrStyle] = useState({\r\n    display: 'none',\r\n    padding: '10px',\r\n    backgroundColor: '#f44336',\r\n    color: 'white',\r\n    opacity:'0.5',\r\n    cursor: 'pointer'\r\n  });\r\n  const [image,setImage] = useState(\"\");\r\n  const [url,setUrl] = useState(\"\");\r\n  \r\n  const history = useHistory(); \r\n  \r\n  const uploadImage = ()=>{\r\n\r\n    const data  = new FormData();\r\n    data.append(\"file\",image);\r\n    data.append(\"upload_preset\",\"instaclone\");\r\n    data.append(\"cloud_name\",\"instagramclone1\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/instagramclone1/image/upload\",{\r\n      method: \"post\",\r\n      body: data\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      setUrl(data.url);\r\n    })\r\n    .catch(err=>console.log(err))\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    \r\n   if(url){\r\n    fetch(\"/signup\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        name:name,\r\n        email:email,\r\n        password:password,\r\n        pic:url\r\n      }),\r\n      \r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      console.log(data);\r\n        if(data.error){\r\n          setError(data.error);\r\n          console.log(\"rendring start\");\r\n          setErrStyle({\r\n            ...errStyle,\r\n            display:'block',\r\n          });\r\n        }\r\n        else{\r\n          setError(data.message);\r\n          setErrStyle({\r\n            ...errStyle,\r\n            display:'block',\r\n            backgroundColor:'green',\r\n          });\r\n          history.push(\"/signin\");\r\n          //setError(data.error);\r\n        }\r\n    })\r\n    .catch(err=>{console.log(err)})\r\n   }\r\n\r\n  },[url]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const PostData = ()=>{\r\n\r\n    if(!(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))){\r\n      setErrStyle({...errStyle,display:'block'});\r\n      setError(\"invalid email format\");\r\n      return ;\r\n    }\r\n\r\n\r\n\r\n    if(image){\r\n      uploadImage();\r\n    }\r\n    else{\r\n      fetch(\"/signup\",{\r\n        method:\"post\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n          name:name,\r\n          email:email,\r\n          password:password,\r\n          pic:url\r\n        }),\r\n        \r\n      })\r\n      .then(res=>res.json())\r\n      .then(data=>{\r\n        console.log(data);\r\n          if(data.error){\r\n            setError(data.error);\r\n            console.log(\"rendring start\");\r\n            setErrStyle({\r\n              ...errStyle,\r\n              display:'block',\r\n            });\r\n          }\r\n          else{\r\n            setError(data.message);\r\n            setErrStyle({\r\n              ...errStyle,\r\n              display:'block',\r\n              backgroundColor:'green',\r\n            });\r\n            history.push(\"/signin\");\r\n            //setError(data.error);\r\n          }\r\n      })\r\n      .catch(err=>{console.log(err)})\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n   \r\n\r\n\r\n  }\r\n\r\n  console.log(\"rendring new\");\r\n\r\n  const errorHandler = ()=>{\r\n    setErrStyle({ \r\n      ...errStyle,\r\n      display: 'none',\r\n      });\r\n  }\r\n\r\n    return ( \r\n    <div className={classes.mycard}>\r\n        <div className={[\"card\",classes.authcard,classes.inputfield].join(\" \")}>\r\n\r\n          {error?<span style={errStyle} >{error} <strong style={{float:'right'}} onClick={errorHandler}>x</strong>  </span>:null}\r\n          \r\n          <h3>Instagram</h3>\r\n          \r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"email\" \r\n          value={email}\r\n          onChange={(event)=>{setEmail.bind(this,event.target.value)()}}\r\n          />\r\n          \r\n        \r\n          <input \r\n          type=\"password\" \r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={(event)=>setPassword(event.target.value)} />\r\n          \r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"username\" \r\n          value={name}\r\n          onChange={(e)=>setName(e.target.value)}/>\r\n          \r\n          <div className=\"file-field\" style={{marginTop:'16px'}}>\r\n              <div className={[classes.mybtn,\"btn\"].join(\" \")}>\r\n                <span>File</span>\r\n                <input type=\"file\"  onChange={(e)=>{setImage(e.target.files[0])}}/>\r\n              </div>\r\n              <div className=\"file-path-wrapper\">\r\n                <input\r\n                  className=\"file-path validate\"\r\n                  type=\"text\"\r\n                  placeholder=\"Upload one or more files\"\r\n                  value={image?image.name:\"\"}\r\n                  readOnly\r\n                />\r\n              </div>\r\n          </div>\r\n\r\n          <button \r\n          className={[classes.mybtn,\"btn waves-effect waves-light\"].join(\" \")} \r\n          onClick={()=>PostData()}\r\n          >\r\n            Signup\r\n          </button>\r\n\r\n          <h6 >\r\n              <Link to=\"./signin\" >Already have an account ?</Link>\r\n          </h6>\r\n        </div>\r\n    </div>);\r\n}  \r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Home\\Home.js",["85"],"import React, { useEffect, useState,useContext } from 'react';\r\nimport classes from './Home.module.css';\r\nimport {Button} from 'reactstrap';\r\nimport {MdThumbUp,MdThumbDown,MdFavorite} from 'react-icons/md';\r\nimport {UserContext} from '../../../App';\r\nimport {BsTrashFill} from 'react-icons/bs';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { v4 as uid } from 'uuid';\r\n\r\n\r\nconst Home = () => {\r\n    const [postsdata, setPosts] = useState([]);\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('/allpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n                console.log(result);\r\n               setPosts(result.posts);\r\n                \r\n        }).catch(err=>console.log(err));\r\n\r\n        return ()=>{\r\n            setPosts([]); //cleanup on unmount\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const likeHandler = (postId)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers: {\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({postId:postId})\r\n\r\n        }).then((res)=>res.json())\r\n        .then(res=>{\r\n            let updatedPosts =  postsdata.map((post)=>{\r\n                if(post._id===res._id){\r\n                    return res ; \r\n                }\r\n                else{\r\n                    return post;\r\n                }\r\n            });\r\n\r\n            setPosts(updatedPosts);   \r\n            \r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    const unlikeHandler = (postid)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers: {\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({postId:postid})\r\n\r\n        }).then((res)=>res.json())\r\n        .then(res=>{\r\n            let updatedPosts =  postsdata.map((post)=>{\r\n                if(post._id===res._id){\r\n                    return res ; \r\n                }\r\n                else{\r\n                    return post;\r\n                }\r\n            });\r\n\r\n            setPosts(updatedPosts);   \r\n            \r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    let btnStyle = { \r\n            backgroundColor:'white' ,\r\n            height:'25px',\r\n            border:'none',\r\n            color:'black',\r\n            boxShadow:'none',\r\n\r\n            }\r\n    \r\n    let deletePost = (postId)=>{\r\n        fetch(`/deletepost/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(res.result);\r\n            const newData = postsdata.filter(item=>{\r\n                return item._id !== res.result._id\r\n            })\r\n            setPosts(newData)\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n    }\r\n\r\n\r\n\r\n\r\n    const makeComment = (text,postId) =>{\r\n\r\n    fetch('/comment',{\r\n        \r\n                    method:'put',\r\n                    headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        postId,\r\n                        text\r\n                    })\r\n                }).then(res=>{\r\n                    return res.json();\r\n                })\r\n                .then(updatedPost => {\r\n                    console.log(updatedPost);\r\n\r\n                    const updatedPosts = postsdata.map((post)=>{\r\n                        if(post._id === updatedPost._id){\r\n                            return updatedPost;\r\n                        }\r\n                        else\r\n                            return post;\r\n                    })\r\n\r\n                    setPosts(updatedPosts);\r\n\r\n                })\r\n                .catch(err=>console.log(err))\r\n            }\r\n        \r\n    const fetchPosts = postsdata.map((post) => {\r\n        return (\r\n            <div  key={post._id} className={[classes.mycard, \"card\"].join(\" \")}>\r\n                <h5 onClick={\r\n                    ()=>{\r\n                        if(post.postedBy._id === state && state.userId){\r\n                            history.push('profile')\r\n                        }\r\n                        else{\r\n                            history.push('/profile/'+post.postedBy._id);\r\n                        }\r\n                    }\r\n                }>\r\n                  <h5 style={{cursor: 'pointer'}}>  {post.postedBy.name}</h5>\r\n                    {\r\n                 state && state.userId && (post.postedBy._id === state.userId)  && <BsTrashFill size={25} style={{float: \"right\",color:\"black\",cursor:'pointer'}} onClick={deletePost.bind(this,post._id)}/>\r\n                }\r\n                </h5>\r\n              \r\n                <div  className=\"card-image mt-3\">\r\n                    <img src={post.photo} alt=\"\" style={{maxHeight:\"300px\",maxwidth:\"300px\"}}/>\r\n                </div>\r\n                <div  className={classes.inputfield}>\r\n                    <div className=\"py-3\">\r\n                    <Button className=\"m-0 p-0\" style={btnStyle}><MdFavorite size={25}/></Button>\r\n                    \r\n                    <Button className=\"m-0 p-0 ml-2\" style={btnStyle} disabled={state?post.likes.includes(state.userId):\"\"}><MdThumbUp  onClick={()=>{likeHandler(post._id)}}  className=\"ml-3\" size={25}/></Button>\r\n                    <Button className=\"m-0 p-0 ml-2\" style={btnStyle} ><MdThumbDown onClick={()=>{unlikeHandler(post._id)}} className=\"ml-3\" size={25} /></Button>\r\n                    </div>\r\n                    <span><strong>{post.likes.length+\" Likes\"}</strong></span>\r\n                    <h6 className=\"mt-2\">{post.title}</h6>\r\n                   \r\n                    <hr/>\r\n                    <p className=\"mt-2\">{post.body}</p>\r\n                    <hr/>\r\n                    <h5>{\"Comments(\"+post.comments.length+\")\"}</h5>\r\n                    {\r\n                        post.comments.map(comment =>{\r\n                            return (\r\n                                <div className=\"p-3\" style={{borderTop:\"1px solid #ccc\"}} key={uid()}>\r\n                                    <h6>\r\n                                        {comment.postedBy.name} \r\n                                    </h6>\r\n                                    <span>\r\n                                        {comment.text}\r\n                                    </span>\r\n                                   \r\n                                </div>\r\n                            )\r\n                            })\r\n                    }\r\n\r\n\r\n\r\n                    <form onSubmit={(e)=>{\r\n                        e.preventDefault();\r\n                        //console.log(e.target[0].value);\r\n                        makeComment(e.target[0].value,post._id)\r\n                    }}>\r\n                        <div className=\"d-flex align-items-center p-3\" style={{postion:'relative'}}>\r\n                            <input type=\"text\" placeholder=\"add a comment\" className=\"mt-2\"/>\r\n                            <Button type=\"submit\" style={{postion:'absolute',right:0,backgroundColor:\"black\"}}>Submit</Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    \r\n    console.log(state);\r\n    return (\r\n        <div className=\"home\">\r\n           \r\n            {   \r\n                postsdata.length ? state ? fetchPosts : \" \" :\" \"\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\Signin\\Signin.js",["86"],"import React,{useContext, useState}from 'react';\r\nimport classes from './Signin.module.css';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../../../App';\r\nconst Signin = ()=>{\r\n  const {state,dispatch} = useContext(UserContext);\r\n  const [password,setPassword] = useState(\"\");\r\n  const [email,setEmail] = useState(\"\");\r\n  const [error,setError] = useState(\"\");\r\n  const [errStyle,setErrStyle] = useState({\r\n    display: 'none',\r\n    padding: '10px',\r\n    backgroundColor: '#f44336',\r\n    color: 'white',\r\n    opacity:'0.5',\r\n    cursor: 'pointer'\r\n  });\r\n  \r\n  const history = useHistory(); \r\n\r\n  const errorHandler = ()=>{\r\n    setError(\"\");\r\n    setErrStyle({ \r\n      ...errStyle,\r\n      display: 'none',\r\n      });\r\n  }\r\n\r\n  const PostData = ()=>{\r\n    //eslint-disable-next-line\r\n    if(!(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))){\r\n      \r\n      setErrStyle({\r\n        ...errStyle,\r\n        display:'block'});\r\n\r\n      setError(\"invalid email format\");\r\n      return ;\r\n    }\r\n\r\n    console.log(email+\" \"+password);\r\n\r\n    fetch(\"/signin\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        email:email,\r\n        password:password\r\n      }),\r\n      \r\n    })\r\n    .then(res=>{console.log(res); return res.json()})\r\n    .then(data=>{\r\n       console.log(data);\r\n        if(data.error){\r\n          setError(data.error);\r\n          //console.log(\"rendring start\");\r\n          setErrStyle({\r\n            ...errStyle,\r\n            display:'block',\r\n          });\r\n        }\r\n        else{\r\n          \r\n          localStorage.setItem(\"jwt\",data.token);\r\n          localStorage.setItem(\"user\",JSON.stringify(data.currentUser));\r\n          dispatch({type:\"USER\",payload:data.currentUser});\r\n          setError(data.message);\r\n          setErrStyle({\r\n            ...errStyle,\r\n            display:'block',\r\n            backgroundColor:'green',\r\n          });\r\n          history.push(\"/\");\r\n        }\r\n    })\r\n    .catch(err=>{console.log(err)})\r\n  }\r\n\r\n\r\nconst errSignin = error?(<span style={errStyle} >{error} <strong style={{float:'right'}} onClick={errorHandler}>x</strong>  </span>):null;\r\n\r\n\r\n\r\n    return (\r\n      <div className={classes.mycard}>\r\n        <div className={[\"card\",classes.authcard,classes.inputfield].join(\" \")}>\r\n          {errSignin}\r\n\r\n          <h3>Instagram</h3>\r\n\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"email\" \r\n          value={email}\r\n          onChange={(event)=>{setEmail.bind(this,event.target.value)()}}\r\n          />\r\n          \r\n          <input \r\n          type=\"password\" \r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={(e)=>setPassword(e.target.value)} />\r\n          \r\n          <button \r\n          className={[classes.mybtn,\"btn waves-effect waves-light\"].join(\" \")} \r\n          type=\"submit\"\r\n          onClick={PostData}\r\n          >\r\n            Signin\r\n          </button>,\r\n\r\n          <h6 >\r\n            <Link to=\"./signup\" >create new account</Link> \r\n          </h6>\r\n        </div>\r\n      </div>\r\n    );\r\n}  \r\n\r\nexport default Signin;","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\Navbar\\Navbar.js",["87","88"],"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\CreatePost\\CreatePost.js",["89"],"import React,{useEffect, useState} from \"react\";\r\nimport classes from \"./CreatePost.module.css\";\r\nimport Toast from '../../Toast/Toast';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CreatePost = () => {\r\n\r\n  const [title,setTitle] = useState(\"\");\r\n  const [body,setBody] = useState(\"\");\r\n  const [image,setImage] = useState(\"\");\r\n  const [url,setUrl] = useState(\"\");\r\n  const history = useHistory();\r\n  const [isOpen,setIsOpen] = useState(false);\r\n  const [message,setMessage] = useState(\"\");\r\n\r\n\r\n  const postDetails = ()=>{\r\n    const data = new FormData();\r\n    data.append(\"file\",image);\r\n    data.append(\"upload_preset\",\"instaclone\");\r\n    data.append(\"cloud_name\",\"instagramclone1\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/instagramclone1/image/upload\",{\r\n      method:\"post\",\r\n      body:data\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      setUrl(data.url);\r\n      // console.log(\r\n      // title,\r\n      // body,\r\n      // data.url);\r\n      \r\n\r\n\r\n    })\r\n    .catch(err=>console.log(err))\r\n\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    if(url){\r\n      fetch('/createpost',{\r\n        method:'post',\r\n        headers:{\r\n          \"Content-Type\":\"application/json\",\r\n          \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n        },\r\n        body:JSON.stringify({\r\n            title,\r\n            body,\r\n            pic:url\r\n        })\r\n      })\r\n      .then(res=>res.json())\r\n      .then(data=>{\r\n        console.log(data);\r\n        if(data.error){\r\n          setMessage(data.error)\r\n          setIsOpen(true);\r\n        }\r\n        else{\r\n          \r\n          setMessage(\"posted successfully\")\r\n          setIsOpen(true);\r\n          history.push(\"/\");\r\n        }\r\n      }).catch(err=>console.log(err))\r\n    }\r\n\r\n  },[url]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div> \r\n      <div\r\n      className={[classes.inputfield,classes.form,\"card input-filled\"].join(\" \")}\r\n    >\r\n      <h4>Create Post</h4>\r\n      <input \r\n      type=\"text\" \r\n      placeholder=\"Title\" \r\n      onChange={e=>{setTitle(e.target.value)}}\r\n      value={title}\r\n      \r\n      />\r\n      <input \r\n      type=\"text\" \r\n      placeholder=\"Body\" \r\n      onChange={e=>{setBody(e.target.value)}}\r\n      value={body}\r\n      />\r\n\r\n      <div className=\"file-field\" style={{marginTop:'16px'}}>\r\n        <div className={[classes.mybtn,\"btn\"].join(\" \")}>\r\n          <span>File</span>\r\n          <input type=\"file\"  onChange={(e)=>{setImage(e.target.files[0])}}/>\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input\r\n            className=\"file-path validate\"\r\n            type=\"text\"\r\n            placeholder=\"Upload one or more files\"\r\n            value={image?image.name:\"\"}\r\n            readOnly\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={[\"btn\",classes.mybtn].join(\" \")} \r\n      style={{marginTop:'16px'}}\r\n      onClick={()=>postDetails()}\r\n      >\r\n        Submit Post\r\n      </div>\r\n\r\n    </div>\r\n\r\n    </div>\r\n    <div >\r\n      {isOpen ? <Toast message={message} show={isOpen}/>:\" \"}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\Toast\\Toast.js",["90"],"import React,{ useEffect, useState } from \"react\"\r\nimport { Button, Toast, ToastBody } from 'reactstrap';\r\n const ToastNew = (props)=>{\r\n\r\n    const [show,setShow] = useState(false);\r\n\r\n    useEffect(()=>{\r\n       // console.log(\"use\");\r\n        setShow(props.show);\r\n        let timeout = setTimeout(()=>{setShow(false)},15000)\r\n\r\n        return ()=>{\r\n            clearTimeout(timeout);\r\n        }\r\n    },[])\r\n\r\n    return (\r\n    <Toast isOpen={show} style={{backgroundColor: props.color || 'green' ,width:'280px',height:'150px'}}>\r\n        <ToastBody >\r\n            <h6 style={{color:'white',display:'inline',marginRight:'20px'}}>{props.message}</h6>  \r\n            <Button onClick={()=>{setShow(false)}}>X</Button>\r\n        </ToastBody>\r\n      </Toast>)\r\n\r\n\r\n}\r\nexport default ToastNew;","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\UserProfile\\UserProfile.js",["91"],"C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\FollowingPosts\\FollowingPosts.js",["92"],"import React, { useEffect, useState,useContext } from 'react';\r\nimport classes from './Home.module.css';\r\nimport {Button} from 'reactstrap';\r\nimport {MdThumbUp,MdThumbDown,MdFavorite} from 'react-icons/md';\r\nimport {UserContext} from '../../../App';\r\nimport {BsTrashFill} from 'react-icons/bs';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { v4 as uid } from 'uuid';\r\n\r\n\r\nconst Followingposts = () => {\r\n    const [postsdata, setPosts] = useState([]);\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('/followingpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n                console.log(result);\r\n               setPosts(result.posts);\r\n                \r\n        }).catch(err=>console.log(err));\r\n\r\n        return ()=>{\r\n            setPosts([]); //cleanup on unmount\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const likeHandler = (postId)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers: {\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({postId:postId})\r\n\r\n        }).then((res)=>res.json())\r\n        .then(res=>{\r\n            let updatedPosts =  postsdata.map((post)=>{\r\n                if(post._id===res._id){\r\n                    return res ; \r\n                }\r\n                else{\r\n                    return post;\r\n                }\r\n            });\r\n\r\n            setPosts(updatedPosts);   \r\n            \r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    const unlikeHandler = (postid)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers: {\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({postId:postid})\r\n\r\n        }).then((res)=>res.json())\r\n        .then(res=>{\r\n            let updatedPosts =  postsdata.map((post)=>{\r\n                if(post._id===res._id){\r\n                    return res ; \r\n                }\r\n                else{\r\n                    return post;\r\n                }\r\n            });\r\n\r\n            setPosts(updatedPosts);   \r\n            \r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    let btnStyle = { \r\n            backgroundColor:'white' ,\r\n            height:'25px',\r\n            border:'none',\r\n            color:'black',\r\n            boxShadow:'none',\r\n\r\n            }\r\n    \r\n    let deletePost = (postId)=>{\r\n        fetch(`/deletepost/${postId}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+ localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(res.result);\r\n            const newData = postsdata.filter(item=>{\r\n                return item._id !== res.result._id\r\n            })\r\n            setPosts(newData)\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n    }\r\n\r\n\r\n\r\n\r\n    const makeComment = (text,postId) =>{\r\n\r\n    fetch('/comment',{\r\n        \r\n                    method:'put',\r\n                    headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        postId,\r\n                        text\r\n                    })\r\n                }).then(res=>{\r\n                    return res.json();\r\n                })\r\n                .then(updatedPost => {\r\n                    console.log(updatedPost);\r\n\r\n                    const updatedPosts = postsdata.map((post)=>{\r\n                        if(post._id === updatedPost._id){\r\n                            return updatedPost;\r\n                        }\r\n                        else\r\n                            return post;\r\n                    })\r\n\r\n                    setPosts(updatedPosts);\r\n\r\n                })\r\n                .catch(err=>console.log(err))\r\n            }\r\n        \r\n    const fetchPosts = postsdata.map((post) => {\r\n        return (\r\n            <div  key={post._id} className={[classes.mycard, \"card\"].join(\" \")}>\r\n                <h5 onClick={\r\n                    ()=>{\r\n                        if(post.postedBy._id === state && state.userId){\r\n                            history.push('profile')\r\n                        }\r\n                        else{\r\n                            history.push('/profile/'+post.postedBy._id);\r\n                        }\r\n                    }\r\n                }>\r\n                  <h5 style={{cursor: 'pointer'}}>  {post.postedBy.name}</h5>\r\n                    {\r\n                  (post.postedBy._id === state.userId)  && <BsTrashFill size={25} style={{float: \"right\",color:\"black\",cursor:'pointer'}} onClick={deletePost.bind(this,post._id)}/>\r\n                }\r\n                </h5>\r\n              \r\n                <div  className=\"card-image mt-3\">\r\n                    <img src={post.photo} alt=\"\" style={{maxHeight:\"300px\",maxwidth:\"300px\"}}/>\r\n                </div>\r\n                <div  className={classes.inputfield}>\r\n                    <div className=\"py-3\">\r\n                    <Button className=\"m-0 p-0\" style={btnStyle}><MdFavorite size={25}/></Button>\r\n                    \r\n                    <Button className=\"m-0 p-0 ml-2\" style={btnStyle} disabled={state?post.likes.includes(state.userId):\"\"}><MdThumbUp  onClick={()=>{likeHandler(post._id)}}  className=\"ml-3\" size={25}/></Button>\r\n                    <Button className=\"m-0 p-0 ml-2\" style={btnStyle} ><MdThumbDown onClick={()=>{unlikeHandler(post._id)}} className=\"ml-3\" size={25} /></Button>\r\n                    </div>\r\n                    <span><strong>{post.likes.length+\" Likes\"}</strong></span>\r\n                    <h6 className=\"mt-2\">{post.title}</h6>\r\n                   \r\n                    <hr/>\r\n                    <p className=\"mt-2\">{post.body}</p>\r\n                    <hr/>\r\n                    <h5>{\"Comments(\"+post.comments.length+\")\"}</h5>\r\n                    {\r\n                        post.comments.map(comment =>{\r\n                            return (\r\n                                <div className=\"p-3\" style={{borderTop:\"1px solid #ccc\"}} key={uid()}>\r\n                                    <h6>\r\n                                        {comment.postedBy.name} \r\n                                    </h6>\r\n                                    <span>\r\n                                        {comment.text}\r\n                                    </span>\r\n                                   \r\n                                </div>\r\n                            )\r\n                            })\r\n                    }\r\n\r\n\r\n\r\n                    <form onSubmit={(e)=>{\r\n                        e.preventDefault();\r\n                        //console.log(e.target[0].value);\r\n                        makeComment(e.target[0].value,post._id)\r\n                    }}>\r\n                        <div className=\"d-flex align-items-center p-3\" style={{postion:'relative'}}>\r\n                            <input type=\"text\" placeholder=\"add a comment\" className=\"mt-2\"/>\r\n                            <Button type=\"submit\" style={{postion:'absolute',right:0,backgroundColor:\"black\"}}>Submit</Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    \r\n    console.log(state);\r\n    return (\r\n        <div className=\"home\">\r\n           \r\n            {   \r\n                postsdata.length ? state ? fetchPosts : \" \" :\" \"\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Followingposts;","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\ResetPassword\\ResetPassword.js",["93","94","95"],"import React,{useContext, useState}from 'react';\r\nimport classes from './Signin.module.css';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport Toast from '../../Toast/Toast'\r\n\r\n\r\nconst ResetPassword = ()=>{\r\n\r\n  const [email,setEmail] = useState(\"\");\r\n  const [error,setError] = useState(\"\");\r\n  const [message,setMessage] = useState(\"\")\r\n\r\n  const [errStyle,setErrStyle] = useState({\r\n    display: 'none',\r\n    padding: '10px',\r\n    backgroundColor: '#f44336',\r\n    color: 'white',\r\n    opacity:'0.5',\r\n    cursor: 'pointer'\r\n  });\r\n  \r\n  const history = useHistory(); \r\n\r\n  const errorHandler = ()=>{\r\n    setError(\"\");\r\n    setErrStyle({ \r\n      ...errStyle,\r\n      display: 'none',\r\n      });\r\n  }\r\n\r\n  const PostData = ()=>{\r\n    //eslint-disable-next-line\r\n    if(!(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))){\r\n      \r\n      setErrStyle({\r\n        ...errStyle,\r\n        display:'block'});\r\n\r\n      setError(\"invalid email format\");\r\n      return ;\r\n    }\r\n\r\n\r\n    fetch(\"/reset-password\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        email:email\r\n      }),\r\n      \r\n    })\r\n    .then(res=>{ return res.json()})\r\n    .then(data=>{     \r\n          setMessage(data.message);\r\n          //history.push(\"/\");      \r\n    })\r\n    .catch(err=>{console.log(err)})\r\n  }\r\n\r\n\r\nconst errSignin = error?(<span style={errStyle} >{error} <strong style={{float:'right'}} onClick={errorHandler}>x</strong>  </span>):null;\r\n\r\n\r\n\r\n    return (\r\n      <div className={classes.mycard}>\r\n          \r\n        <div className={[\"card\",classes.authcard,classes.inputfield].join(\" \")}>\r\n          {errSignin}\r\n          <Toast message={message} show={true} />\r\n          <h3>Reset Password</h3>\r\n\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"email\" \r\n          value={email}\r\n          onChange={(event)=>{setEmail.bind(this,event.target.value)()}}\r\n          />\r\n          \r\n          \r\n          <button \r\n          className={[classes.mybtn,\"btn waves-effect waves-light\"].join(\" \")} \r\n          type=\"submit\"\r\n          onClick={PostData}\r\n          >\r\n          Send Email\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}  \r\n\r\nexport default ResetPassword;","C:\\Users\\amrishpatidar\\Desktop\\mern\\client\\src\\components\\screens\\NewPassword\\NewPassword.js",["96"],"import React,{useContext, useState}from 'react';\r\nimport classes from './Signin.module.css';\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport Toast from '../../Toast/Toast'\r\n\r\n\r\nconst NewPassword = ()=>{\r\n\r\n  const [password,setPassword] = useState(\"\");\r\n  const [message,setMessage] = useState(\"\");\r\n  const {token} = useParams(\"\") ; \r\n\r\n  const history = useHistory(); \r\n\r\n  const PostData = ()=>{\r\n    //eslint-disable-next-line\r\n    if(!(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/.test(password))){\r\n      setMessage(\"invalid password format\");\r\n      return ;\r\n    }\r\n\r\n\r\n    fetch(\"/new-password\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        password,\r\n        token\r\n      }),\r\n      \r\n    })\r\n    .then(res=>{ return res.json()})\r\n    .then(data=>{     \r\n          setMessage(data.message);\r\n          history.push(\"/signin\");      \r\n    })\r\n    .catch(err=>{console.log(err)})\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className={classes.mycard}>\r\n          <div style={{position: 'absolute',right: '10px',top: '50px'}}>\r\n            {message && <Toast message={message} show={true} />}\r\n          </div>\r\n        <div className={[\"card\",classes.authcard,classes.inputfield].join(\" \")}>\r\n       \r\n          \r\n          <h3>New Password</h3>\r\n\r\n          <input \r\n          type=\"password\" \r\n          placeholder=\"New Password\" \r\n          value={password}\r\n          onChange={(event)=>{setPassword.bind(this,event.target.value)()}}\r\n          />\r\n                \r\n          <button \r\n          className={[classes.mybtn,\"btn waves-effect waves-light\"].join(\" \")} \r\n          type=\"submit\"\r\n          onClick={PostData}\r\n          >\r\n          change Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}  \r\n\r\nexport default NewPassword;",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":35,"nodeType":"103","messageId":"104","endLine":3,"endColumn":48},{"ruleId":"101","severity":1,"message":"105","line":20,"column":12,"nodeType":"103","messageId":"104","endLine":20,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":37,"column":7,"nodeType":"108","endLine":37,"endColumn":9,"suggestions":"109"},{"ruleId":"101","severity":1,"message":"110","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":15},{"ruleId":"101","severity":1,"message":"111","line":14,"column":12,"nodeType":"103","messageId":"104","endLine":14,"endColumn":17},{"ruleId":"106","severity":1,"message":"112","line":54,"column":7,"nodeType":"108","endLine":54,"endColumn":9,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"112","line":90,"column":7,"nodeType":"108","endLine":90,"endColumn":12,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":127,"column":22,"nodeType":"117","endLine":132,"endColumn":58},{"ruleId":"106","severity":1,"message":"118","line":86,"column":5,"nodeType":"108","endLine":86,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":96,"column":20,"nodeType":"122","messageId":"123","endLine":96,"endColumn":21,"suggestions":"124"},{"ruleId":"120","severity":1,"message":"121","line":96,"column":45,"nodeType":"122","messageId":"123","endLine":96,"endColumn":46,"suggestions":"125"},{"ruleId":"101","severity":1,"message":"126","line":13,"column":18,"nodeType":"103","messageId":"104","endLine":13,"endColumn":26},{"ruleId":"101","severity":1,"message":"105","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":15},{"ruleId":"101","severity":1,"message":"110","line":5,"column":9,"nodeType":"103","messageId":"104","endLine":5,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":55,"column":54,"nodeType":"129","endLine":55,"endColumn":81},{"ruleId":"106","severity":1,"message":"130","line":73,"column":5,"nodeType":"108","endLine":73,"endColumn":10,"suggestions":"131"},{"ruleId":"106","severity":1,"message":"132","line":15,"column":7,"nodeType":"108","endLine":15,"endColumn":9,"suggestions":"133"},{"ruleId":"106","severity":1,"message":"134","line":34,"column":7,"nodeType":"108","endLine":34,"endColumn":9,"suggestions":"135"},{"ruleId":"101","severity":1,"message":"126","line":13,"column":18,"nodeType":"103","messageId":"104","endLine":13,"endColumn":26},{"ruleId":"101","severity":1,"message":"136","line":1,"column":15,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"137","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"138","line":22,"column":9,"nodeType":"103","messageId":"104","endLine":22,"endColumn":16},{"ruleId":"101","severity":1,"message":"136","line":1,"column":15,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'Button' is defined but never used.","'image' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["142"],["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'email', 'errStyle', 'history', 'name', and 'password'. Either include them or remove the dependency array. You can also do a functional update 'setErrStyle(e => ...)' if you only need 'errStyle' in the 'setErrStyle' call.",["144"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["145","146"],["147","148"],"'dispatch' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'props.show'. Either include it or remove the dependency array. If 'setShow' needs the current value of 'props.show', you can also switch to useReducer instead of useState and read 'props.show' in the reducer.",["150"],"React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["151"],"'useContext' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"messageId":"160","fix":"161","desc":"162"},{"messageId":"163","fix":"164","desc":"165"},{"messageId":"160","fix":"166","desc":"162"},{"messageId":"163","fix":"167","desc":"165"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [dispatch, history]",{"range":"174","text":"175"},"Update the dependencies array to be: [dispatch]",{"range":"176","text":"177"},"Update the dependencies array to be: [dispatch, url]",{"range":"178","text":"179"},"Update the dependencies array to be: [email, errStyle, history, name, password, url]",{"range":"180","text":"181"},"removeEscape",{"range":"182","text":"183"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"184","text":"185"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"186","text":"183"},{"range":"187","text":"185"},"Update the dependencies array to be: [body, history, title, url]",{"range":"188","text":"189"},"Update the dependencies array to be: [props.show]",{"range":"190","text":"191"},"Update the dependencies array to be: [fetchUserProfile]",{"range":"192","text":"193"},[1426,1428],"[dispatch, history]",[1569,1571],"[dispatch]",[2534,2539],"[dispatch, url]",[2008,2013],"[email, errStyle, history, name, password, url]",[2078,2079],"",[2078,2078],"\\",[2103,2104],[2103,2103],[1751,1756],"[body, history, title, url]",[407,409],"[props.show]",[962,964],"[fetchUserProfile]"]